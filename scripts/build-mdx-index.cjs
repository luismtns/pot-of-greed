const fs = require('fs')
const path = require('path')

const dir = path.join(process.cwd(), 'content', 'lps')
const out = path.join(dir, 'index.ts')

if (!fs.existsSync(dir)) {
  console.error('No content/lps directory found')
  process.exit(1)
}

const files = fs.readdirSync(dir).filter((f) => f.endsWith('.mdx'))

let content = `// This file is generated by scripts/build-mdx-index.cjs\n`
content += `// Do not edit manually.\n\n`

files.forEach((f, i) => {
  content += `import Component${i} from './${f}'\n`
  content += `import * as Meta${i} from './${f}'\n\n`
})

content += `export type MDXMeta = { title?: string; description?: string; [key: string]: any }\n\n`
content += `export const MDX_PAGES = {\n`
files.forEach((f, i) => {
  const slug = f.replace(/\.mdx$/, '')
  content += `  '${slug}': { Component: Component${i}, meta: Meta${i} as MDXMeta },\n`
})
content += `} as const\n\n`

content += `export type MDXSlug = keyof typeof MDX_PAGES\n`

fs.writeFileSync(out, content)
console.log('Wrote', out)
